<?php

class PageMarginsHandler extends Handler{
    public function handle(XMLReader $request)
    {
        if($request->nodeType === XMLReader::ELEMENT &&
            $request->name === "style:page-layout"){

            $margins = [
                "margin-top" => $this->convertMeasure(
                    $request->getAttribute("fo:margin-top")),
                "margin-right" => $this->convertMeasure(
                    $request->getAttribute("fo:margin-right")),
                "margin-bottom" => $this->convertMeasure(
                    $request->getAttribute("fo:margin-bottom")),
                "margin-left" => $this->convertMeasure(
                    $request->getAttribute("fo:margin-left"))
            ];

            return "<style>
                        body {
                            margin-top: {$margins['margin-top']};
                            margin-right: {$margins['margin-right']};
                            margin-bottom: {$margins['margin-bottom']};
                            margin-left: {$margins['margin-left']};
                        }
                    </style>";
        }
        return parent::handle($request); // TODO: Change the autogenerated stub
    }

    private function convertMeasure(string $measure): string {
        if (!$measure) {
            return '0';
        }

        // Convert ODT measurements to CSS units
        preg_match('/([0-9.]+)([a-zA-Z]*)/', $measure, $matches);
        if ($matches) {
            $value = (float)$matches[1];
            $unit = strtolower($matches[2]) ?: 'mm';

            return match ($unit) {
                'cm' => ($value * 10) . 'px',
                'mm' => ($value * 3.78) . 'px',
                'in' => ($value * 96) . 'px',
                default => $measure,
            };
        }

        return $measure;
    }
}